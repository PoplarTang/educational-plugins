plugins {
  id "org.jetbrains.intellij" version "0.0.39"
}

subprojects {

  apply plugin: 'java'
  apply plugin: "org.jetbrains.intellij"

  tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

  sourceSets {
    main {
      java.srcDirs 'src'
      resources.srcDir 'resources'
    }
    test {
      java.srcDir 'test'
    }
  }

  intellij {
    version ideaVersion
    updateSinceUntilBuild Boolean.valueOf(updateBuildNumber)
    downloadSources Boolean.valueOf(downloadIdeaSources)
    sandboxDirectory = new File(rootProject.projectDir, "gradleBuild/idea-sandbox")
  }

  afterEvaluate {
    tasks.getByName('buildPlugin') {
      archiveName = "$intellij.pluginName-$version-${buildNumber}.zip"
    }
  }

  buildDir = new File(rootProject.projectDir, "gradleBuild/" + project.name)

  repositories {
    ivy {
      ivyPattern      'http://buildserver.labs.intellij.net/guestAuth/repository/download/Educational_CorePlugins162/lastSuccessful/teamcity-ivy.xml'
      artifactPattern 'http://buildserver.labs.intellij.net/guestAuth/repository/download/Educational_CorePlugins162/lastSuccessful/[artifact].[ext]'
    }
  }


  configurations {
    corePlugins
  }

  dependencies {
    corePlugins ('org:Educational_CorePlugins162:lastSuccessful')
    compile files(rootProject.projectDir.toString() + "/gradleBuild/student/classes")
  }

  task copyPlugins(type: Copy) {
    configurations.corePlugins.filter{dep -> dep.name.endsWith(".zip")}.each{
      from zipTree(it)
    }

    into rootProject.projectDir.toString() + "/gradleBuild"
  }
}

project(':Edu-IntelliJ') {
  compileJava.dependsOn(copyPlugins)

  intellij {
    pluginName 'Edu-IntelliJ'
  }

}


project(':Edu-Java') {
  sourceSets {
    main {
      java.srcDirs '../src'
    }
  }

  compileJava.dependsOn(copyPlugins)

  intellij {
    pluginName 'Edu-Java'
    plugins 'junit'
  }
  dependencies {
    compile project (':Edu-IntelliJ')
  }
}

project(':Edu-Kotlin') {
  sourceSets {
    main {
      java.srcDirs '../src'
    }
  }

  compileJava.dependsOn(copyPlugins)

  intellij {
    pluginName 'Edu-Kotlin'
    plugins 'Kotlin', 'junit'
  }

  dependencies {
    compile project (':Edu-IntelliJ')
  }
}

project(':CourseCreator-IntelliJ') {
  sourceSets {
    main {
      java.srcDirs '../src'
    }
  }

  compileJava.dependsOn(copyPlugins)
  intellij {
    pluginName 'CourseCreator-IntelliJ'
    plugins 'junit'
  }

  dependencies {
    compile project (':Edu-IntelliJ')
    compile files(rootProject.projectDir.toString() + "/gradleBuild/course-creator/classes")
    compile files(rootProject.projectDir.toString() + "/gradleBuild/student/classes")
  }

}